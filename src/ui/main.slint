import { TabWidget, VerticalBox } from "std-widgets.slint";
import { TimeToolComponent } from "./components/mod.slint";
import { JsonToolComponent } from "./components/mod.slint";
import { Colors, Fonts, Styles } from "./themes/mod.slint";

export struct Theme {
    primary: brush,
    text: brush,
    background: brush,
}

export global Themes {
    out property <Theme> current: {
        primary: #2196F3,
        text: #000000,
        background: #FFFFFF,
    };
}

export global AppLogic {
    callback request-current-time();
    callback convert-to-timestamp(string);
    callback convert-to-ms-timestamp(string);
    callback format-json(string);
    callback minify-json(string);
    callback time-format-changed(string);
}

export component MainWindow inherits Window {
    title: "开发工具集";
    background: Colors.background;
    min-width: 800px;
    min-height: 600px;
    
    // 时间工具属性
    in-out property <string> current-time: "";
    in-out property <string> result: "";
    in-out property <string> time-format: "YYYY-MM-DD HH:mm:ss";
    
    // JSON工具属性
    in-out property <string> output: "";

    callback request-current-time();
    callback convert-to-timestamp(string);
    callback convert-to-ms-timestamp(string);
    callback format-json(string);
    callback minify-json(string);
    callback time-format-changed(string);

    Rectangle {
        background: Colors.background;
        padding: Styles.spacing-normal;

        TabWidget {
            Tab {
                title: "时间工具";
                VerticalBox {
                    padding: Styles.spacing-normal;
                    spacing: Styles.spacing-normal;

                    TimeToolComponent {
                        current-time: root.current-time;
                        result: root.result;
                        time-format <=> root.time-format;
                        request-current-time => { root.request-current-time() }
                        convert-to-timestamp(input) => { root.convert-to-timestamp(input) }
                        convert-to-ms-timestamp(input) => { root.convert-to-ms-timestamp(input) }
                        time-format-changed(format) => { root.time-format-changed(format) }
                    }
                }
            }

            Tab {
                title: "JSON工具";
                VerticalBox {
                    padding: Styles.spacing-normal;
                    spacing: Styles.spacing-normal;

                    JsonToolComponent {
                        output: root.output;
                        format-json(input) => { root.format-json(input) }
                        minify-json(input) => { root.minify-json(input) }
                    }
                }
            }
        }
    }
}

global StyleMetrics {
    out property <length> tab-text-size: Fonts.size-large;
    out property <int> tab-text-weight: Fonts.weight-medium;
    out property <brush> tab-text-color: Colors.text;
}
